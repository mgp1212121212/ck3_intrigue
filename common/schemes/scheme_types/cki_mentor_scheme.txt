
#############################
# MENTOR REPUTATION SCHEME
#############################
mentor_diplomacy_scheme = {
	# Basic Setup
	skill = learning
	desc = mentor_scheme_general_desc
	success_desc = "MENTOR_SUCCESS_DESC"
	icon = icon_mentor

	illustration = "gfx/interface/illustrations/event_scenes/corridor.dds"
	category = personal
	target_type = character
	is_secret = no
	is_basic = yes
	uses_resistance = yes
	maximum_breaches = 5
	cooldown = { years = 5 }
	
	# Parameters
	speed_per_skill_point = t1_spsp_owner_value
	spymaster_speed_per_skill_point = 0
	uses_resistance = no
	base_progress_goal = 365
	base_maximum_success = 95
	minimum_success = 5

	# Core Triggers
	allow = {
		is_adult = yes
		is_imprisoned = no

		scope:target = {
			age > 12
			is_imprisoned = no
		}

		#AI blockers
		trigger_if = {
			limit = { is_ai = yes }

			scope:target = { #AI won't steal if they like you
				opinion = {
					target = scope:owner
					value <= 50
				}

				trigger_if = { #AI won't steal from friends... Unless...
					limit = {
						OR = {
							has_relation_friend = scope:owner 
							has_relation_best_friend = scope:owner 
						}
					}
					scope:owner = {
						OR = {
							has_trait = greedy
							has_trait = deceitful
						}
					}
				}
				trigger_if = { #So players don't get spammed by AIs trying to steal 
					limit = {
						is_ai = no
					}
					NOT = {
						any_targeting_scheme = {
							scheme_type = steal_back_artifact
						}
					}
				}
			}
		}
	}
	
	valid = {
		is_incapable = no
		NOT = { is_at_war_with = scope:target }
		scope:target = {
			OR = {
				exists = location
				in_diplomatic_range = scope:owner
			}
		}
	}
	odds_prediction = {
		add = base_odds_prediction_target_is_char_value
		add = odds_skill_contribution_learning_value
		min = 0
	}
	# Base Chances
	base_success_chance = {
		base = 0
		modifier = {
			add = {
				value = scope:owner.diplomacy
				multiply = 1
			}
			desc = SCHEME_LEARNING_MODIFIER
			scope:owner.learning > 0
		}
		modifier = {
			add = {
				value = scope:owner.learning
				multiply = 1
			}
			desc = SCHEME_LEARNING_MODIFIER
			scope:owner.learning > 0
		}
		modifier = {
			add = {
				value = scope:owner.learning
				multiply = 1
			}
			desc = SCHEME_LEARNING_TARGET_MODIFIER
			scope:owner.learning > 0
		}
		modifier = {
			desc = "scheme_intellect_good_1"
			scope:target = { has_trait = intellect_good_1 }
			add = 5
		}
		
		modifier = {
			desc = "scheme_intellect_good_2"
			scope:target = { has_trait = intellect_good_2 }
			add = 10
		}
		
		modifier = {
			desc = "scheme_intellect_good_3"
			scope:target = { has_trait = intellect_good_3 }
			add = 15
		}
		#Intellect good
		modifier = {
			desc = "scheme_intellect_good_1"
			scope:owner = { has_trait = intellect_good_1 }
			add = 10
		}
		
		modifier = {
			desc = "scheme_intellect_good_2"
			scope:owner = { has_trait = intellect_good_2 }
			add = 20
		}
		
		modifier = {
			desc = "scheme_intellect_good_3"
			scope:owner = { has_trait = intellect_good_3 }
			add = 30
		}
		
		modifier = {
			scope:target = { has_trait = stubborn }
			desc = "SCHEME_TRAIT_STUBBORN"
			add = -20
		}
		
		modifier = {
			scope:target = { has_trait = ambitious }
			desc = "SCHEME_TRAIT_AMBITIOUS"
			add = 5
		}
		# Pedagogy Perk
		modifier = {
			add = 25
			desc = LEARN_LANGUAGE_PEDAGOGY_PERK_DESC
			scope:owner = {
				has_perk = pedagogy_perk
			}
		}
	}

	# On Actions
	on_phase_completed = {
		# Grab our scopes.
		save_scope_as = scheme
		scheme_target_character = { save_scope_as = target }
		scheme_owner = { save_scope_as = owner }
		mentor_diplomacy_scheme_prep_effect = yes
	}
	on_monthly = {
	}

	on_invalidated = {
		scheme_target_character = {
			save_scope_as = target
		}
		scheme_owner = {
			save_scope_as = owner
		}
		if = {
			limit = {
				scope:target = { is_alive = no }
			}
			scope:owner = {
				send_interface_toast = {
					title = cki_scheme_invalidated_title
					custom_tooltip = cki_scheme_invalidated_dead
					left_icon = scope:target
				}
			}
		}
		else_if = {	
			limit = {
				scope:owner = {
					is_at_war_with = scope:target
				}
			}
			scope:owner = {
				send_interface_toast = {
					title = cki_scheme_invalidated_title
					custom_tooltip = cki_scheme_invalidated_war
					left_icon = scope:target
				}
			}
		}

		if = {
			limit = {
				scope:target = { 
					NOT = { in_diplomatic_range = scope:owner } 
				}
			}
			scope:owner = {
				send_interface_toast = {
					title = cki_scheme_invalidated_title
					left_icon = scope:target
					custom_description_no_bullet = {
						object = scope:target
						text = scheme_target_not_in_diplomatic_range
					}
				}
			}
		}
	}
}
mentor_martial_scheme = {
	# Basic Setup
	skill = learning
	desc = mentor_scheme_general_desc
	success_desc = "MENTOR_SUCCESS_DESC"
	icon = learning

	illustration = "gfx/interface/illustrations/event_scenes/corridor.dds"
	category = personal
	target_type = character
	is_secret = no
	is_basic = yes
	uses_resistance = yes
	maximum_breaches = 5
	cooldown = { years = 30 }
	
	# Parameters
	speed_per_skill_point = t1_spsp_owner_value
	spymaster_speed_per_skill_point = 0
	uses_resistance = no
	base_progress_goal = 365
	base_maximum_success = 95
	minimum_success = 5

	# Core Triggers
	allow = {
		is_adult = yes
		is_imprisoned = no

		scope:target = {
			age > 12
			is_imprisoned = no
		}

		#AI blockers
		trigger_if = {
			limit = { is_ai = yes }

			scope:target = { #AI won't steal if they like you
				opinion = {
					target = scope:owner
					value <= 50
				}

				trigger_if = { #AI won't steal from friends... Unless...
					limit = {
						OR = {
							has_relation_friend = scope:owner 
							has_relation_best_friend = scope:owner 
						}
					}
					scope:owner = {
						OR = {
							has_trait = greedy
							has_trait = deceitful
						}
					}
				}
				trigger_if = { #So players don't get spammed by AIs trying to steal 
					limit = {
						is_ai = no
					}
					NOT = {
						any_targeting_scheme = {
							scheme_type = steal_back_artifact
						}
					}
				}
			}
		}
	}
	
	valid = {
		is_incapable = no
		NOT = { is_at_war_with = scope:target }
		scope:target = {
			OR = {
				exists = location
				in_diplomatic_range = scope:owner
			}
		}
	}
	odds_prediction = {
		add = base_odds_prediction_target_is_char_value
		add = odds_skill_contribution_learning_value
		min = 0
	}
	# Base Chances
	base_success_chance = {
		base = 0
		modifier = {
			add = {
				value = scope:owner.martial
				multiply = 1
			}
			desc = SCHEME_LEARNING_MODIFIER
			scope:owner.learning > 0
		}
		modifier = {
			add = {
				value = scope:owner.learning
				multiply = 1
			}
			desc = SCHEME_LEARNING_MODIFIER
			scope:owner.learning > 0
		}
		modifier = {
			add = {
				value = scope:owner.learning
				multiply = 1
			}
			desc = SCHEME_LEARNING_TARGET_MODIFIER
			scope:owner.learning > 0
		}
		modifier = {
			desc = "scheme_intellect_good_1"
			scope:target = { has_trait = intellect_good_1 }
			add = 5
		}
		
		modifier = {
			desc = "scheme_intellect_good_2"
			scope:target = { has_trait = intellect_good_2 }
			add = 10
		}
		
		modifier = {
			desc = "scheme_intellect_good_3"
			scope:target = { has_trait = intellect_good_3 }
			add = 15
		}
		#Intellect good
		modifier = {
			desc = "scheme_intellect_good_1"
			scope:owner = { has_trait = intellect_good_1 }
			add = 10
		}
		
		modifier = {
			desc = "scheme_intellect_good_2"
			scope:owner = { has_trait = intellect_good_2 }
			add = 20
		}
		
		modifier = {
			desc = "scheme_intellect_good_3"
			scope:owner = { has_trait = intellect_good_3 }
			add = 30
		}
		
		modifier = {
			scope:target = { has_trait = stubborn }
			desc = "SCHEME_TRAIT_STUBBORN"
			add = -20
		}
		
		modifier = {
			scope:target = { has_trait = ambitious }
			desc = "SCHEME_TRAIT_AMBITIOUS"
			add = 5
		}
		# Pedagogy Perk
		modifier = {
			add = 25
			desc = LEARN_LANGUAGE_PEDAGOGY_PERK_DESC
			scope:owner = {
				has_perk = pedagogy_perk
			}
		}
	}

	# On Actions
	on_phase_completed = {
		# Grab our scopes.
		save_scope_as = scheme
		scheme_target_character = { save_scope_as = target }
		scheme_owner = { save_scope_as = owner }
		
		mentor_martial_scheme_prep_effect = yes
	}
	on_monthly = {
	}

	on_invalidated = {
		scheme_target_character = {
			save_scope_as = target
		}
		scheme_owner = {
			save_scope_as = owner
		}
		if = {
			limit = {
				scope:target = { is_alive = no }
			}
			scope:owner = {
				send_interface_toast = {
					title = cki_scheme_invalidated_title
					custom_tooltip = cki_scheme_invalidated_dead
					left_icon = scope:target
				}
			}
		}
		else_if = {	
			limit = {
				scope:owner = {
					is_at_war_with = scope:target
				}
			}
			scope:owner = {
				send_interface_toast = {
					title = cki_scheme_invalidated_title
					custom_tooltip = cki_scheme_invalidated_war
					left_icon = scope:target
				}
			}
		}

		if = {
			limit = {
				scope:target = { 
					NOT = { in_diplomatic_range = scope:owner } 
				}
			}
			scope:owner = {
				send_interface_toast = {
					title = cki_scheme_invalidated_title
					left_icon = scope:target
					custom_description_no_bullet = {
						object = scope:target
						text = scheme_target_not_in_diplomatic_range
					}
				}
			}
		}
	}
}
mentor_stewardship_scheme = {
	# Basic Setup
	skill = learning
	desc = mentor_scheme_general_desc
	success_desc = "MENTOR_SUCCESS_DESC"
	icon = learning

	illustration = "gfx/interface/illustrations/event_scenes/corridor.dds"
	category = personal
	target_type = character
	is_secret = no
	is_basic = yes
	uses_resistance = yes
	maximum_breaches = 5
	cooldown = { years = 30 }
	
	# Parameters
	speed_per_skill_point = t1_spsp_owner_value
	spymaster_speed_per_skill_point = 0
	uses_resistance = no
	base_progress_goal = 365
	base_maximum_success = 95
	minimum_success = 5

	# Core Triggers
	allow = {
		is_adult = yes
		is_imprisoned = no

		scope:target = {
			age > 12
			is_imprisoned = no
		}

		#AI blockers
		trigger_if = {
			limit = { is_ai = yes }

			scope:target = { #AI won't steal if they like you
				opinion = {
					target = scope:owner
					value <= 50
				}

				trigger_if = { #AI won't steal from friends... Unless...
					limit = {
						OR = {
							has_relation_friend = scope:owner 
							has_relation_best_friend = scope:owner 
						}
					}
					scope:owner = {
						OR = {
							has_trait = greedy
							has_trait = deceitful
						}
					}
				}
				trigger_if = { #So players don't get spammed by AIs trying to steal 
					limit = {
						is_ai = no
					}
					NOT = {
						any_targeting_scheme = {
							scheme_type = steal_back_artifact
						}
					}
				}
			}
		}
	}
	
	valid = {
		is_incapable = no
		NOT = { is_at_war_with = scope:target }
		scope:target = {
			OR = {
				exists = location
				in_diplomatic_range = scope:owner
			}
		}
	}
	odds_prediction = {
		add = base_odds_prediction_target_is_char_value
		add = odds_skill_contribution_learning_value
		min = 0
	}
	# Base Chances
	base_success_chance = {
		base = 0
		modifier = {
			add = {
				value = scope:owner.stewardship
				multiply = 1
			}
			desc = SCHEME_LEARNING_MODIFIER
			scope:owner.learning > 0
		}
		modifier = {
			add = {
				value = scope:owner.learning
				multiply = 1
			}
			desc = SCHEME_LEARNING_MODIFIER
			scope:owner.learning > 0
		}
		modifier = {
			add = {
				value = scope:owner.learning
				multiply = 1
			}
			desc = SCHEME_LEARNING_TARGET_MODIFIER
			scope:owner.learning > 0
		}
		modifier = {
			desc = "scheme_intellect_good_1"
			scope:target = { has_trait = intellect_good_1 }
			add = 5
		}
		
		modifier = {
			desc = "scheme_intellect_good_2"
			scope:target = { has_trait = intellect_good_2 }
			add = 10
		}
		
		modifier = {
			desc = "scheme_intellect_good_3"
			scope:target = { has_trait = intellect_good_3 }
			add = 15
		}
		#Intellect good
		modifier = {
			desc = "scheme_intellect_good_1"
			scope:owner = { has_trait = intellect_good_1 }
			add = 10
		}
		
		modifier = {
			desc = "scheme_intellect_good_2"
			scope:owner = { has_trait = intellect_good_2 }
			add = 20
		}
		
		modifier = {
			desc = "scheme_intellect_good_3"
			scope:owner = { has_trait = intellect_good_3 }
			add = 30
		}
		
		modifier = {
			scope:target = { has_trait = stubborn }
			desc = "SCHEME_TRAIT_STUBBORN"
			add = -20
		}
		
		modifier = {
			scope:target = { has_trait = ambitious }
			desc = "SCHEME_TRAIT_AMBITIOUS"
			add = 5
		}
		# Pedagogy Perk
		modifier = {
			add = 25
			desc = LEARN_LANGUAGE_PEDAGOGY_PERK_DESC
			scope:owner = {
				has_perk = pedagogy_perk
			}
		}
	}

	# On Actions
	on_phase_completed = {
		# Grab our scopes.
		save_scope_as = scheme
		scheme_target_character = { save_scope_as = target }
		scheme_owner = { save_scope_as = owner }
		
		mentor_stewardship_scheme_prep_effect = yes
	}
	on_monthly = {
	}

	on_invalidated = {
		scheme_target_character = {
			save_scope_as = target
		}
		scheme_owner = {
			save_scope_as = owner
		}
		if = {
			limit = {
				scope:target = { is_alive = no }
			}
			scope:owner = {
				send_interface_toast = {
					title = learn_language_invalidated
					custom_tooltip = learn_language_invalidated_dead_desc
					left_icon = scope:target
				}
			}
		}
		
		if = {
			limit = {
				scope:target = { 
					NOT = { in_diplomatic_range = scope:owner }
				}
			}
			scope:owner = {
				send_interface_toast = {
					title = learn_language_invalidated_title
					left_icon = scope:target
					custom_description_no_bullet = {
						object = scope:target
						text = scheme_target_not_in_diplomatic_range
					}
				}
			}
		}
		
		scope:owner = {
			if = {
				limit = {
					is_alive = yes
					scope:target = {
						OR = {
							is_alive = no
							NOT = { in_diplomatic_range = scope:owner }
						}
					}
					NOR = {
						culture = { # You can't learn your own native language
							has_same_culture_language = scope:target.culture
						}
						knows_language_of_culture = scope:target.culture
					}
				}
				set_variable = {
					name = language_progress
					value = prev.scheme_progress
				}
				trigger_event = learn_language_outcome.3000
			}
		}
	}
}
mentor_intrigue_scheme = {
	# Basic Setup
	skill = learning
	desc = mentor_scheme_general_desc
	success_desc = "MENTOR_SUCCESS_DESC"
	icon = learning

	illustration = "gfx/interface/illustrations/event_scenes/corridor.dds"
	category = personal
	target_type = character
	is_secret = no
	is_basic = yes
	uses_resistance = yes
	maximum_breaches = 5
	cooldown = { years = 30 }
	
	# Parameters
	speed_per_skill_point = t1_spsp_owner_value
	spymaster_speed_per_skill_point = 0
	uses_resistance = no
	base_progress_goal = 365
	base_maximum_success = 95
	minimum_success = 5

	# Core Triggers
	allow = {
		is_adult = yes
		is_imprisoned = no

		scope:target = {
			age > 12
			is_imprisoned = no
		}

		#AI blockers
		trigger_if = {
			limit = { is_ai = yes }

			scope:target = { #AI won't steal if they like you
				opinion = {
					target = scope:owner
					value <= 50
				}

				trigger_if = { #AI won't steal from friends... Unless...
					limit = {
						OR = {
							has_relation_friend = scope:owner 
							has_relation_best_friend = scope:owner 
						}
					}
					scope:owner = {
						OR = {
							has_trait = greedy
							has_trait = deceitful
						}
					}
				}
				trigger_if = { #So players don't get spammed by AIs trying to steal 
					limit = {
						is_ai = no
					}
					NOT = {
						any_targeting_scheme = {
							scheme_type = steal_back_artifact
						}
					}
				}
			}
		}
	}
	
	valid = {
		is_incapable = no
		NOT = { is_at_war_with = scope:target }
		scope:target = {
			OR = {
				exists = location
				in_diplomatic_range = scope:owner
			}
		}
	}
	odds_prediction = {
		add = base_odds_prediction_target_is_char_value
		add = odds_skill_contribution_learning_value
		min = 0
	}
	# Base Chances
	base_success_chance = {
		base = 0
		modifier = {
			add = {
				value = scope:owner.intrigue
				multiply = 1
			}
			desc = SCHEME_LEARNING_MODIFIER
			scope:owner.learning > 0
		}
		modifier = {
			add = {
				value = scope:owner.learning
				multiply = 1
			}
			desc = SCHEME_LEARNING_MODIFIER
			scope:owner.learning > 0
		}
		modifier = {
			add = {
				value = scope:owner.learning
				multiply = 1
			}
			desc = SCHEME_LEARNING_TARGET_MODIFIER
			scope:owner.learning > 0
		}
		modifier = {
			desc = "scheme_intellect_good_1"
			scope:target = { has_trait = intellect_good_1 }
			add = 5
		}
		
		modifier = {
			desc = "scheme_intellect_good_2"
			scope:target = { has_trait = intellect_good_2 }
			add = 10
		}
		
		modifier = {
			desc = "scheme_intellect_good_3"
			scope:target = { has_trait = intellect_good_3 }
			add = 15
		}
		#Intellect good
		modifier = {
			desc = "scheme_intellect_good_1"
			scope:owner = { has_trait = intellect_good_1 }
			add = 10
		}
		
		modifier = {
			desc = "scheme_intellect_good_2"
			scope:owner = { has_trait = intellect_good_2 }
			add = 20
		}
		
		modifier = {
			desc = "scheme_intellect_good_3"
			scope:owner = { has_trait = intellect_good_3 }
			add = 30
		}
		
		modifier = {
			scope:target = { has_trait = stubborn }
			desc = "SCHEME_TRAIT_STUBBORN"
			add = -20
		}
		
		modifier = {
			scope:target = { has_trait = ambitious }
			desc = "SCHEME_TRAIT_AMBITIOUS"
			add = 5
		}
		# Pedagogy Perk
		modifier = {
			add = 25
			desc = LEARN_LANGUAGE_PEDAGOGY_PERK_DESC
			scope:owner = {
				has_perk = pedagogy_perk
			}
		}
	}

	# On Actions
	on_phase_completed = {
		# Grab our scopes.
		save_scope_as = scheme
		scheme_target_character = { save_scope_as = target }
		scheme_owner = { save_scope_as = owner }
		
		mentor_intrigue_scheme_prep_effect = yes
	}
	on_monthly = {
	}

	on_invalidated = {
		scheme_target_character = {
			save_scope_as = target
		}
		scheme_owner = {
			save_scope_as = owner
		}
		if = {
			limit = {
				scope:target = { is_alive = no }
			}
			scope:owner = {
				send_interface_toast = {
					title = cki_scheme_invalidated_title
					custom_tooltip = cki_scheme_invalidated_dead
					left_icon = scope:target
				}
			}
		}
		else_if = {	
			limit = {
				scope:owner = {
					is_at_war_with = scope:target
				}
			}
			scope:owner = {
				send_interface_toast = {
					title = cki_scheme_invalidated_title
					custom_tooltip = cki_scheme_invalidated_war
					left_icon = scope:target
				}
			}
		}

		if = {
			limit = {
				scope:target = { 
					NOT = { in_diplomatic_range = scope:owner } 
				}
			}
			scope:owner = {
				send_interface_toast = {
					title = cki_scheme_invalidated_title
					left_icon = scope:target
					custom_description_no_bullet = {
						object = scope:target
						text = scheme_target_not_in_diplomatic_range
					}
				}
			}
		}
	}
}
mentor_learning_scheme = {
	# Basic Setup
	skill = learning
	desc = mentor_scheme_general_desc
	success_desc = "MENTOR_SUCCESS_DESC"
	icon = learning

	illustration = "gfx/interface/illustrations/event_scenes/corridor.dds"
	category = personal
	target_type = character
	is_secret = no
	is_basic = yes
	uses_resistance = yes
	maximum_breaches = 5
	cooldown = { years = 30 }
	
	# Parameters
	speed_per_skill_point = t1_spsp_owner_value
	spymaster_speed_per_skill_point = 0
	uses_resistance = no
	base_progress_goal = 365
	base_maximum_success = 95
	minimum_success = 5

	# Core Triggers
	allow = {
		is_adult = yes
		is_imprisoned = no

		scope:target = {
			age > 12
			is_imprisoned = no
		}

		#AI blockers
		trigger_if = {
			limit = { is_ai = yes }

			scope:target = { #AI won't steal if they like you
				opinion = {
					target = scope:owner
					value <= 50
				}

				trigger_if = { #AI won't steal from friends... Unless...
					limit = {
						OR = {
							has_relation_friend = scope:owner 
							has_relation_best_friend = scope:owner 
						}
					}
					scope:owner = {
						OR = {
							has_trait = greedy
							has_trait = deceitful
						}
					}
				}
				trigger_if = { #So players don't get spammed by AIs trying to steal 
					limit = {
						is_ai = no
					}
					NOT = {
						any_targeting_scheme = {
							scheme_type = steal_back_artifact
						}
					}
				}
			}
		}
	}
	
	valid = {
		is_incapable = no
		NOT = { is_at_war_with = scope:target }
		scope:target = {
			OR = {
				exists = location
				in_diplomatic_range = scope:owner
			}
		}
	}
	odds_prediction = {
		add = base_odds_prediction_target_is_char_value
		add = odds_skill_contribution_learning_value
		min = 0
	}
	# Base Chances
	base_success_chance = {
		base = 0
		modifier = {
			add = {
				value = scope:owner.learning
				multiply = 1
			}
			desc = SCHEME_LEARNING_MODIFIER
			scope:owner.learning > 0
		}
		modifier = {
			add = {
				value = scope:owner.learning
				multiply = 1
			}
			desc = SCHEME_LEARNING_MODIFIER
			scope:owner.learning > 0
		}
		modifier = {
			add = {
				value = scope:owner.learning
				multiply = 1
			}
			desc = SCHEME_LEARNING_TARGET_MODIFIER
			scope:owner.learning > 0
		}
		modifier = {
			desc = "scheme_intellect_good_1"
			scope:target = { has_trait = intellect_good_1 }
			add = 5
		}
		
		modifier = {
			desc = "scheme_intellect_good_2"
			scope:target = { has_trait = intellect_good_2 }
			add = 10
		}
		
		modifier = {
			desc = "scheme_intellect_good_3"
			scope:target = { has_trait = intellect_good_3 }
			add = 15
		}
		#Intellect good
		modifier = {
			desc = "scheme_intellect_good_1"
			scope:owner = { has_trait = intellect_good_1 }
			add = 10
		}
		
		modifier = {
			desc = "scheme_intellect_good_2"
			scope:owner = { has_trait = intellect_good_2 }
			add = 20
		}
		
		modifier = {
			desc = "scheme_intellect_good_3"
			scope:owner = { has_trait = intellect_good_3 }
			add = 30
		}
		
		modifier = {
			scope:target = { has_trait = stubborn }
			desc = "SCHEME_TRAIT_STUBBORN"
			add = -20
		}
		
		modifier = {
			scope:target = { has_trait = ambitious }
			desc = "SCHEME_TRAIT_AMBITIOUS"
			add = 5
		}
		# Pedagogy Perk
		modifier = {
			add = 25
			desc = LEARN_LANGUAGE_PEDAGOGY_PERK_DESC
			scope:owner = {
				has_perk = pedagogy_perk
			}
		}
	}

	# On Actions
	on_phase_completed = {
		# Grab our scopes.
		save_scope_as = scheme
		scheme_target_character = { save_scope_as = target }
		scheme_owner = { save_scope_as = owner }
		
		mentor_learning_scheme_prep_effect = yes
	}
	on_monthly = {
	}

	on_invalidated = {
		scheme_target_character = {
			save_scope_as = target
		}
		scheme_owner = {
			save_scope_as = owner
		}
		if = {
			limit = {
				scope:target = { is_alive = no }
			}
			scope:owner = {
				send_interface_toast = {
					title = cki_scheme_invalidated_title
					custom_tooltip = cki_scheme_invalidated_dead
					left_icon = scope:target
				}
			}
		}
		else_if = {	
			limit = {
				scope:owner = {
					is_at_war_with = scope:target
				}
			}
			scope:owner = {
				send_interface_toast = {
					title = cki_scheme_invalidated_title
					custom_tooltip = cki_scheme_invalidated_war
					left_icon = scope:target
				}
			}
		}

		if = {
			limit = {
				scope:target = { 
					NOT = { in_diplomatic_range = scope:owner } 
				}
			}
			scope:owner = {
				send_interface_toast = {
					title = cki_scheme_invalidated_title
					left_icon = scope:target
					custom_description_no_bullet = {
						object = scope:target
						text = scheme_target_not_in_diplomatic_range
					}
				}
			}
		}
	}
}
